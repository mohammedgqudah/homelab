global:
  scrape_interval: 15s

rule_files:
  - /etc/prometheus-rules/*.yml

alerting:
  alertmanagers:
    - scheme: http
      dns_sd_configs:
        - names:
          - alertmanager-sd.default.svc.cluster.local
          type: SRV
    
scrape_configs:
  - job_name: 'kubernetes-service-endpoints'
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
      # select services with the prometheus.io/scrape annotation
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # override the default /metrics path
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # override the default port
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      # format labels
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      # format service names as job
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: job
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

  # Scrape config for nodes (kubelet).
  - job_name: "kubernetes-nodes"
    scheme: https
    kubernetes_sd_configs:
      - role: node
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    authorization:
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: replace
        source_labels: [__meta_kubernetes_node_name]
        target_label: node

  # Scrape config for Kubelet cAdvisor.
  - job_name: "kubernetes-cadvisor"
    scheme: https
    kubernetes_sd_configs:
      - role: node
    metrics_path: /metrics/cadvisor
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    authorization:
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: replace
        source_labels: [__meta_kubernetes_node_name]
        target_label: node

  # Blackbox prober for kubernetes services.
  # The service should have a `prometheus.io/probe: 'true'` annotation
  - job_name: "blackbox-kubernetes-services"
    metrics_path: /probe
    params:
      module: [http_2xx]
    kubernetes_sd_configs:
    - role: service
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
        action: keep
        regex: true
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement:  blackbox-exporter.default.svc.cluster.local
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_service_name

